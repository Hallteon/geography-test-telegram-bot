from aiogram import types
from aiogram.dispatcher.filters import Command

from filters import IsAdmin
from loader import dp
from utils.db_utils.connect_db import cursor
from utils.db_utils.db_functions import continents_convert
from utils.misc.continents_data import data_continents


@dp.message_handler(IsAdmin(), Command("statistic"))
async def statistic(message: types.Message):
    user_id = message.get_args().split()

    if user_id:
        user_id = user_id[0]

        try:
            cursor.execute(f"""SELECT name FROM users WHERE id = {user_id};""")

        except:
            await message.answer("<b>–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º id!</b>")

        else:
            text = f"<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {cursor.fetchone()[0]} –≤ —Ç–µ—Å—Ç–µ –ø–æ " \
                   f"—Å—Ç–æ–ª–∏—Ü–∞–º —Å—Ç—Ä–∞–Ω —Ä–∞–∑–Ω—ã—Ö –∫–æ–Ω—Ç–∏–Ω–µ—Ç–æ–≤ üèî:</b>\n\n"

            for continent in list(data_continents.keys()):
                cursor.execute(f"""SELECT {continents_convert[continent]} FROM users WHERE id = {user_id};""")
                points = cursor.fetchone()[0]

                text = text + f"<b>{continent}: –º–∞–∫—Å–∏–º—É–º {points} –≤–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.</b>\n\n"

            await message.answer(text)

    else:
        await message.answer("<b>–í—ã –∑–∞–±—ã–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!</b>")